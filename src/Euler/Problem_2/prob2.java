package Euler.Problem_2;

/** Problem Statement
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 * @author VC
 *
 */

/** Thought Process
 * Fibonacci Foruma for the n'th Fibonacci number in the sequence. 
 * F(n) = F(n-1) + F(n-2)
 * 
 * 
 * @author VC
 *
 */

public class prob2 {

	//method to find the n'th fibonacci sequence
	public static int fibonaci(int n)
	{
		if (n == 0 ) return 0;
		else if (n == 1) return 1;
		return fibonaci(n-1) + fibonaci(n-2);
	}
	
	public static void main(String[] args) {
	// TODO Auto-generated method stub
		
		int i = 0, fib = 0, sum = 0;
		final int MAX = 4000000;
		while (fib < MAX)
		{
			//if the fibonaci sequence is even, add to the running sum
			if ( (fib % 2) == 0 ) 
				sum += fib;
			fib = fibonaci(i);
			i++;
		}
		System.out.println("The sum total of even fibonaci sequences less than 4 million is: " + sum);
		
	}

}
